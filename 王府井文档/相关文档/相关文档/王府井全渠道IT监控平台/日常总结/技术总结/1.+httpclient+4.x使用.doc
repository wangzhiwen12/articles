Message-ID: <1051027500.1331.1489473537789.JavaMail.root@localhost.localdomain>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_1330_867003485.1489473537789"

------=_Part_1330_867003485.1489473537789
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>1. httpclient 4.x=E4=BD=BF=E7=94=A8</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

#main {
    padding-bottom: 1em !important; /* The default padding of 6em is too mu=
ch for printouts */
}

body {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    font-size: 10pt;
    line-height: 1.2;
}

body, #full-height-container, #main, #page, #content, .has-personal-sidebar=
 #content {
    background: #fff    !important;
    color: #000         !important;
    border: 0           !important;
    width: 100%         !important;
    height: auto        !important;
    min-height: auto    !important;
    margin: 0           !important;
    padding: 0          !important;
    display: block      !important;
}

a, a:link, a:visited, a:focus, a:hover, a:active {
    color: #000;
}
#content h1,
#content h2,
#content h3,
#content h4,
#content h5,
#content h6 {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    page-break-after: avoid;
}
pre {
    font-family: Monaco, "Courier New", monospace;
}

#header,
.aui-header-inner,
#navigation,
#sidebar,
.sidebar,
#personal-info-sidebar,
.ia-fixed-sidebar,
.page-actions,
.navmenu,
.ajs-menu-bar,
.noprint,
.inline-control-link,
.inline-control-link a,
a.show-labels-editor,
.global-comment-actions,
.comment-actions,
.quick-comment-container,
#addcomment {
    display: none !important;
}

.comment .date::before {
    content: none !important; /* remove middot for print view */
}

h1.pagetitle img {
    height: auto;
    width: auto;
}

.print-only {
    display: block;
}
#footer {
    position: relative !important; /* CONF-17506 Place the footer at end of=
 the content */
    margin: 0;
    padding: 0;
    background: none;
    clear: both;
}

#poweredby {
    border-top: none;
    background: none;
}

#poweredby li.print-only {
    display: list-item;
    font-style: italic;
}

#poweredby li.noprint {
    display:none;
}


/* no width controls in print */
.wiki-content .table-wrap,
.wiki-content p,
.panel .codeContent,
.panel .codeContent pre,
.image-wrap {
    overflow: visible !important;
}

/* TODO - should this work? */
#children-section,
#comments-section .comment,
#comments-section .comment .comment-body,
#comments-section .comment .comment-content,
#comments-section .comment p {
    page-break-inside: avoid;
}

#page-children a {
    text-decoration: none;
}

/**
 hide twixies

 the specificity here is a hack because print styles
 are getting loaded before the base styles. */
#comments-section.pageSection .section-header,
#comments-section.pageSection .section-title,
#children-section.pageSection .section-header,
#children-section.pageSection .section-title,
.children-show-hide {
    padding-left: 0;
    margin-left: 0;
}

.children-show-hide.icon {
    display: none;
}

/* personal sidebar */
.has-personal-sidebar #content {
    margin-right: 0px;
}

.has-personal-sidebar #content .pageSection {
    margin-right: 0px;
}
-->
    </style>
</head>
<body>
    <h1>1. httpclient 4.x=E4=BD=BF=E7=94=A8</h1>
    <div class=3D"Section1">
        <p>=E4=BB=A5httpclient4.5=E4=B8=BA=E4=BE=8B:</p>
<p>=E4=B8=80=E3=80=81=E6=89=80=E9=9C=80=E8=A6=81=E7=9A=84jar=E5=8C=85</p>
<p>&nbsp;&nbsp; httpclient-4.5.jar</p>
<p>&nbsp; &nbsp;httpcore-4.4.1.jar</p>
<p>&nbsp; &nbsp;httpmime-4.5.jar</p>
<p>=E4=BA=8C=E3=80=81=E4=BD=BF=E7=94=A8=E6=96=B9=E6=B3=95</p>
<p>=E4=BD=BF=E7=94=A8HttpClient=E5=8F=91=E9=80=81=E8=AF=B7=E6=B1=82=E3=80=
=81=E6=8E=A5=E6=94=B6=E5=93=8D=E5=BA=94=E5=BE=88=E7=AE=80=E5=8D=95=EF=BC=8C=
=E4=B8=80=E8=88=AC=E9=9C=80=E8=A6=81=E5=A6=82=E4=B8=8B=E5=87=A0=E6=AD=A5=E5=
=8D=B3=E5=8F=AF=E3=80=82</p>
<p>1.&nbsp;=E5=88=9B=E5=BB=BAHttpClient=E5=AF=B9=E8=B1=A1=E3=80=82</p>
<p>2.&nbsp;=E5=88=9B=E5=BB=BA=E8=AF=B7=E6=B1=82=E6=96=B9=E6=B3=95=E7=9A=84=
=E5=AE=9E=E4=BE=8B=EF=BC=8C=E5=B9=B6=E6=8C=87=E5=AE=9A=E8=AF=B7=E6=B1=82URL=
=E3=80=82=E5=A6=82=E6=9E=9C=E9=9C=80=E8=A6=81=E5=8F=91=E9=80=81GET=E8=AF=B7=
=E6=B1=82=EF=BC=8C=E5=88=9B=E5=BB=BAHttpGet=E5=AF=B9=E8=B1=A1=EF=BC=9B=E5=
=A6=82=E6=9E=9C=E9=9C=80=E8=A6=81=E5=8F=91=E9=80=81POST=E8=AF=B7=E6=B1=82=
=EF=BC=8C=E5=88=9B=E5=BB=BAHttpPost=E5=AF=B9=E8=B1=A1=E3=80=82</p>
<p>3.&nbsp;=E5=A6=82=E6=9E=9C=E9=9C=80=E8=A6=81=E5=8F=91=E9=80=81=E8=AF=B7=
=E6=B1=82=E5=8F=82=E6=95=B0=EF=BC=8C=E5=8F=AF=E8=B0=83=E7=94=A8HttpGet=E3=
=80=81HttpPost=E5=85=B1=E5=90=8C=E7=9A=84setParams(HetpParams params)=E6=96=
=B9=E6=B3=95=E6=9D=A5=E6=B7=BB=E5=8A=A0=E8=AF=B7=E6=B1=82=E5=8F=82=E6=95=B0=
=EF=BC=9B=E5=AF=B9=E4=BA=8EHttpPost=E5=AF=B9=E8=B1=A1=E8=80=8C=E8=A8=80=EF=
=BC=8C=E4=B9=9F=E5=8F=AF=E8=B0=83=E7=94=A8setEntity(HttpEntity entity)=E6=
=96=B9=E6=B3=95=E6=9D=A5=E8=AE=BE=E7=BD=AE=E8=AF=B7=E6=B1=82=E5=8F=82=E6=95=
=B0=E3=80=82</p>
<p>4.&nbsp;=E8=B0=83=E7=94=A8HttpClient=E5=AF=B9=E8=B1=A1=E7=9A=84execute(H=
ttpUriRequest request)=E5=8F=91=E9=80=81=E8=AF=B7=E6=B1=82=EF=BC=8C=E8=AF=
=A5=E6=96=B9=E6=B3=95=E8=BF=94=E5=9B=9E=E4=B8=80=E4=B8=AAHttpResponse=E3=80=
=82</p>
<p>5.&nbsp;=E8=B0=83=E7=94=A8HttpResponse=E7=9A=84getAllHeaders()=E3=80=81g=
etHeaders(String name)=E7=AD=89=E6=96=B9=E6=B3=95=E5=8F=AF=E8=8E=B7=E5=8F=
=96=E6=9C=8D=E5=8A=A1=E5=99=A8=E7=9A=84=E5=93=8D=E5=BA=94=E5=A4=B4=EF=BC=9B=
=E8=B0=83=E7=94=A8HttpResponse=E7=9A=84getEntity()=E6=96=B9=E6=B3=95=E5=8F=
=AF=E8=8E=B7=E5=8F=96HttpEntity=E5=AF=B9=E8=B1=A1=EF=BC=8C=E8=AF=A5=E5=AF=
=B9=E8=B1=A1=E5=8C=85=E8=A3=85=E4=BA=86=E6=9C=8D=E5=8A=A1=E5=99=A8=E7=9A=84=
=E5=93=8D=E5=BA=94=E5=86=85=E5=AE=B9=E3=80=82=E7=A8=8B=E5=BA=8F=E5=8F=AF=E9=
=80=9A=E8=BF=87=E8=AF=A5=E5=AF=B9=E8=B1=A1=E8=8E=B7=E5=8F=96=E6=9C=8D=E5=8A=
=A1=E5=99=A8=E7=9A=84=E5=93=8D=E5=BA=94=E5=86=85=E5=AE=B9=E3=80=82</p>
<p>6.&nbsp;=E9=87=8A=E6=94=BE=E8=BF=9E=E6=8E=A5=E3=80=82=E6=97=A0=E8=AE=BA=
=E6=89=A7=E8=A1=8C=E6=96=B9=E6=B3=95=E6=98=AF=E5=90=A6=E6=88=90=E5=8A=9F=EF=
=BC=8C=E9=83=BD=E5=BF=85=E9=A1=BB=E9=87=8A=E6=94=BE=E8=BF=9E=E6=8E=A5</p>
<p>=E4=B8=89=E3=80=81=E5=AE=9E=E4=BE=8B</p>
<p><strong>java=E4=BB=A3=E7=A0=81</strong></p>
<p>&nbsp;&nbsp;&nbsp; package cn.tzz.apache.httpclient; &nbsp;<br />&nbsp;&=
nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&n=
bsp;&nbsp; import <a href=3D"http://java.io" class=3D"external-link" rel=3D=
"nofollow">java.io</a>.File; &nbsp;<br />&nbsp;&nbsp;&nbsp; import <a href=
=3D"http://java.io" class=3D"external-link" rel=3D"nofollow">java.io</a>.IO=
Exception; &nbsp;<br />&nbsp;&nbsp;&nbsp; import <a href=3D"http://java.net=
" class=3D"external-link" rel=3D"nofollow">java.net</a>.URL; &nbsp;<br />&n=
bsp;&nbsp;&nbsp; import java.util.ArrayList; &nbsp;<br />&nbsp;&nbsp;&nbsp;=
 import java.util.List; &nbsp;<br />&nbsp;&nbsp;&nbsp; import java.util.Map=
; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp; impor=
t org.apache.http.HttpEntity; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.apa=
che.http.NameValuePair; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.apache.ht=
tp.client.config.RequestConfig; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.a=
pache.http.client.entity.UrlEncodedFormEntity; &nbsp;<br />&nbsp;&nbsp;&nbs=
p; import org.apache.http.client.methods.CloseableHttpResponse; &nbsp;<br /=
>&nbsp;&nbsp;&nbsp; import org.apache.http.client.methods.HttpGet; &nbsp;<b=
r />&nbsp;&nbsp;&nbsp; import org.apache.http.client.methods.HttpPost; &nbs=
p;<br />&nbsp;&nbsp;&nbsp; import org.apache.http.conn.ssl.DefaultHostnameV=
erifier; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.apache.http.conn.util.Pu=
blicSuffixMatcher; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.apache.http.co=
nn.util.PublicSuffixMatcherLoader; &nbsp;<br />&nbsp;&nbsp;&nbsp; import or=
g.apache.http.entity.ContentType; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org=
.apache.http.entity.StringEntity; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org=
.apache.http.entity.mime.MultipartEntityBuilder; &nbsp;<br />&nbsp;&nbsp;&n=
bsp; import org.apache.http.entity.mime.content.FileBody; &nbsp;<br />&nbsp=
;&nbsp;&nbsp; import org.apache.http.entity.mime.content.StringBody; &nbsp;=
<br />&nbsp;&nbsp;&nbsp; import org.apache.http.impl.client.CloseableHttpCl=
ient; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.apache.http.impl.client.Htt=
pClients; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.apache.http.message.Bas=
icNameValuePair; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.apache.http.util=
.EntityUtils; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;=
&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp; public class HttpClientUtil { &=
nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //<span>RequestConfig=E4=BB=
=A3=E8=A1=A8=E5=BD=93=E5=89=8D=E8=AF=B7=E6=B1=82=E9=85=8D=E7=BD=AE,</span> =
=E8=AF=B7=E6=B1=82=E9=85=8D=E7=BD=AE=E5=9C=A8=E6=AD=A4=E8=A2=AB=E5=88=9D=E5=
=A7=8B=E5=8C=96=EF=BC=8C=E5=AE=83=E5=B0=86=E5=9C=A8=E6=89=A7=E8=A1=8C=E4=B8=
=8A=E4=B8=8B=E6=96=87=E4=B8=AD=E4=B8=80=E7=9B=B4=E4=BF=9D=E6=8C=81=E3=80=82=
=E5=85=B1=E4=BA=AB=E4=B8=8E=E5=90=8C=E4=B8=80=E4=B8=AA=E4=BC=9A=E8=AF=9D=E4=
=B8=AD=E6=89=80=E6=9C=89=E8=BF=9E=E7=BB=AD=E7=9A=84=E8=AF=B7=E6=B1=82=E3=80=
=82</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //SocketTimeout=E6=98=AFSocke=
t=E8=AF=BB=E6=95=B0=E6=8D=AE=E7=9A=84=E8=B6=85=E6=97=B6=E6=97=B6=E9=97=B4=
=EF=BC=8C=E5=8D=B3=E4=BB=8E=E6=9C=8D=E5=8A=A1=E5=99=A8=E8=8E=B7=E5=8F=96=E5=
=93=8D=E5=BA=94=E6=95=B0=E6=8D=AE=E9=9C=80=E8=A6=81=E7=AD=89=E5=BE=85=E7=9A=
=84=E6=97=B6=E9=97=B4</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //ConnectTimeout=E6=98=AF=E7=
=BD=91=E7=BB=9C=E4=B8=8E=E6=9C=8D=E5=8A=A1=E5=99=A8=E5=BB=BA=E7=AB=8B=E8=BF=
=9E=E6=8E=A5=E7=9A=84=E8=B6=85=E6=97=B6=E6=97=B6=E9=97=B4</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //ConnectionRequestTimeout=E6=
=98=AF<span class=3D"con">=E4=BB=8E=E8=BF=9E=E6=8E=A5=E6=B1=A0=E8=8E=B7=E5=
=8F=96=E8=BF=9E=E6=8E=A5=E7=9A=84=E8=B6=85=E6=97=B6=E6=97=B6=E9=97=B4</span=
></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private RequestConfig request=
Config =3D RequestConfig.custom() &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .setSocketTim=
eout(15000) &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .setConnectTimeout(15000) &nbsp;<br=
 />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; .setConnectionRequestTimeout(15000) &nbsp;<br />&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; .build(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static H=
ttpClientUtil instance =3D null; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp; private HttpClientUtil(){} &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp; public static HttpClientUtil getInstance(){ &nbsp;<br /=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ins=
tance =3D=3D null) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; instance =3D new HttpClien=
tUtil(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; return instance; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /** <br />&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =E5=8F=91=E9=80=81 post=E8=AF=
=B7=E6=B1=82 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @para=
m httpUrl =E5=9C=B0=E5=9D=80 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp; */ &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public S=
tring sendHttpPost(String httpUrl) { &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Htt=
pHost=E5=AE=9E=E4=BE=8B=E4=BB=A3=E8=A1=A8=E8=BF=9E=E6=8E=A5=E5=88=B0=E7=9B=
=AE=E6=A0=87=E6=9C=8D=E5=8A=A1=E5=99=A8=E7=9A=84=E5=BD=93=E5=89=8D=E8=BF=9E=
=E6=8E=A5<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp; HttpPost httpPost =3D new HttpPost(httpUrl);// =E5=88=9B=E5=BB=BAhtt=
pPost&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp; return sendHttpPost(httpPost); &nbsp;<br />&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
 /** <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =E5=8F=91=E9=
=80=81 post=E8=AF=B7=E6=B1=82 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp; * @param httpUrl =E5=9C=B0=E5=9D=80 <br />&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp; * @param String=E5=8F=82=E6=95=B0(=E6=A0=BC=E5=BC=
=8F:key1=3Dvalue1&amp;key2=3Dvalue2) <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; */ &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
public String sendHttpPost(String httpUrl, String params) { &nbsp;<br />&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpPost ht=
tpPost =3D new HttpPost(httpUrl);// =E5=88=9B=E5=BB=BAhttpPost&nbsp;&nbsp; =
&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp; try { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //=E8=AE=BE=E7=BD=AE=E5=8F=82=E6=95=
=B0 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringEntity stringEntity =3D new StringEnt=
ity(params, &quot;UTF-8&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stringEntity.se=
tContentType(&quot;application/x-www-form-urlencoded&quot;); &nbsp;<br />&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; httpPost.setEntity(stringEntity); &nbsp;<br />&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (Exception e) {=
 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace(); &nbsp;<br />&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return sendHttp=
Post(httpPost); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &n=
bsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /** <br />&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp; * =E5=8F=91=E9=80=81 post=E8=AF=B7=E6=B1=82 <br />&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @param httpUrl =E5=9C=B0=
=E5=9D=80 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @param m=
aps =E5=8F=82=E6=95=B0 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p; */ &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String =
sendHttpPost(String httpUrl, Map&lt;String, String&gt; maps) { &nbsp;<br />=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpPost=
 httpPost =3D new HttpPost(httpUrl);// =E5=88=9B=E5=BB=BAhttpPost&nbsp;&nbs=
p; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp; // =E5=88=9B=E5=BB=BA=E5=8F=82=E6=95=B0=E9=98=9F=E5=88=97,NameValueP=
air=E6=98=AF=E7=AE=80=E5=8D=95=E5=90=8D=E7=A7=B0=E5=80=BC=E5=AF=B9=E8=8A=82=
=E7=82=B9=E7=B1=BB=E5=9E=8B,=E5=A4=9A=E7=94=A8=E4=BA=8EJava=E5=83=8Furl=E5=
=8F=91=E9=80=81Post=E8=AF=B7=E6=B1=82=E3=80=82=E5=9C=A8=E5=8F=91=E9=80=81po=
st=E8=AF=B7=E6=B1=82=E6=97=B6=E7=94=A8=E8=AF=A5list=E6=9D=A5=E5=AD=98=E6=94=
=BE=E5=8F=82=E6=95=B0=E3=80=82&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;NameValuePair&gt; na=
meValuePairs =3D new ArrayList&lt;NameValuePair&gt;(); &nbsp;<br />&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (String key =
: maps.keySet()) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nameValuePairs.add(new Basic=
NameValuePair(key, maps.get(key))); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { &nbsp;<br />&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp; httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, &quot;UTF-=
8&quot;)); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp; } catch (Exception e) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printS=
tackTrace(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp; return sendHttpPost(httpPost); &nbsp;<br />&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /** <br />&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =E5=8F=91=E9=80=81 post=E8=
=AF=B7=E6=B1=82=EF=BC=88=E5=B8=A6=E6=96=87=E4=BB=B6=EF=BC=89 <br />&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @param httpUrl =E5=9C=B0=E5=9D=
=80 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @param maps =
=E5=8F=82=E6=95=B0 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *=
 @param fileLists =E9=99=84=E4=BB=B6 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; */ &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
public String sendHttpPost(String httpUrl, Map&lt;String, String&gt; maps, =
List&lt;File&gt; fileLists) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpPost httpPost =3D new HttpPost(httpUr=
l);// =E5=88=9B=E5=BB=BAhttpPost&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Mul=
tipartEntityBuilder =E4=B8=80=E8=88=AC=E7=94=A8=E4=BA=8E=E4=BC=A0=E8=BE=93=
=E6=96=87=E4=BB=B6<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp; MultipartEntityBuilder meBuilder =3D MultipartEntityBuilder=
.create(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp; for (String key : maps.keySet()) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; //TEXT_PLAIN=E6=98=AF=E5=B0=86=E6=96=87=E4=BB=B6=E8=AE=
=BE=E7=BD=AE=E4=B8=BA=E7=BA=AF=E6=96=87=E6=9C=AC=E7=9A=84=E5=BD=A2=E5=BC=8F=
=E3=80=82<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; meBuilder.addPart(key, new StringBody(maps.g=
et(key), ContentType.TEXT_PLAIN)); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(File file : fileLists) { &=
nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp; FileBody fileBody =3D new FileBody(file); &nbsp;=
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp; meBuilder.addPart(&quot;files&quot;, fileBody); &nbsp=
;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }=
 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp; HttpEntity reqEntity =3D meBuilder.build(); &nbsp;<br />&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; httpPost.setEntity(req=
Entity); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp; return sendHttpPost(httpPost); &nbsp;<br />&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /** <br =
/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =E5=8F=91=E9=80=81Post=
=E8=AF=B7=E6=B1=82 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *=
 @param httpPost <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @=
return <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */ &nbsp;<br =
/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private String sendHttpPost(Ht=
tpPost httpPost) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp; CloseableHttpClient httpClient =3D null; &nbsp;<br /=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Closeab=
leHttpResponse response =3D null; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpEntity entity =3D null; &nbsp;<br=
 />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Strin=
g responseContent =3D null; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =E5=88=
=9B=E5=BB=BA=E9=BB=98=E8=AE=A4=E7=9A=84httpClient=E5=AE=9E=E4=BE=8B. &nbsp;=
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp; httpClient =3D HttpClients.createDefault();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; //=E8=AE=BE=E7=BD=AE=E8=AF=B7=E6=B1=82=E9=85=8D=E7=BD=AE=
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp; httpPost.setConfig(requestConfig); &nbsp;<br />&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp; // =E6=89=A7=E8=A1=8C=E8=AF=B7=E6=B1=82 &nbsp;<br />&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p; response =3D httpClient.execute(httpPost); &nbsp;<br />&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e=
ntity =3D response.getEntity(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; responseContent=
 =3D EntityUtils.toString(entity, &quot;UTF-8&quot;); &nbsp;<br />&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (Exceptio=
n e) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace(); &nbsp;<br />&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } finally { &nb=
sp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp; try { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; // =E5=85=B3=E9=97=AD=E8=BF=9E=E6=8E=A5,=E9=87=8A=E6=94=BE=E8=B5=84=
=E6=BA=90 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (response =
!=3D null) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; response.close(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (httpClie=
nt !=3D null) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; httpClient.close(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (IOException e) { &nbsp=
;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace(); &nbsp;<=
br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return responseContent; &nbsp;<br />&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;=
 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /** <br />&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =E5=8F=91=E9=80=81 get=E8=AF=B7=
=E6=B1=82 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @param h=
ttpUrl <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */ &nbsp;<br =
/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String sendHttpGet(Stri=
ng httpUrl) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp; HttpGet httpGet =3D new HttpGet(httpUrl);// =E5=88=9B=E5=
=BB=BAget=E8=AF=B7=E6=B1=82 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return sendHttpGet(httpGet); &nbsp;<br />&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =E5=8F=91=E9=80=81 ge=
t=E8=AF=B7=E6=B1=82</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @param httpUrl</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @param maps =E5=8F=82=
=E6=95=B0</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */ &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String sendHttpGet(Str=
ing httpUrl, Map&lt;String, String&gt; maps) { &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpG=
et httpGet =3D new HttpGet(httpUrl);// =E5=88=9B=E5=BB=BAget=E8=AF=B7=E6=B1=
=82</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&=
lt;NameValuePair&gt; nameValuePairs =3D new ArrayList&lt;NameValuePair&gt;(=
); &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (=
String key : maps.keySet()) { &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; nameValuePairs.add(new BasicNameValuePair(key, maps.get(=
key))); &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbs=
p;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span=
>String&nbsp;<span class=3D"attribute">str</span><span>&nbsp;=3D&nbsp;</spa=
n><span class=3D"attribute-value">EntityUtils</span><span>.toString(new&nbs=
p;UrlEncodedFormEntity(nameValuePairs )); </span></span></p>
<p><span>&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; <span>httpget.setURI(new&nbsp;URI(httpget.getURI().toString()=
&nbsp;+&nbsp;&quot;?&quot;&nbsp;+&nbsp;str));</span></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; retur=
n sendHttpGet(httpGet); &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;</p>
<p><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /** <br />&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =E5=8F=91=E9=80=81 get=E8=AF=B7=E6=B1=
=82Https <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * @param ht=
tpUrl <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */ &nbsp;<br /=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String sendHttpsGet(Stri=
ng httpUrl) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp; HttpGet httpGet =3D new HttpGet(httpUrl);// =E5=88=9B=E5=
=BB=BAget=E8=AF=B7=E6=B1=82 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return sendHttpsGet(httpGet); &nbsp;<br />&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp; /** <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =E5=
=8F=91=E9=80=81Get=E8=AF=B7=E6=B1=82 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; * @param httpGet<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp; * @return <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p; */ &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private String=
 sendHttpGet(HttpGet httpGet) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CloseableHttpClient httpClient =3D null=
; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp; CloseableHttpResponse response =3D null; &nbsp;<br />&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpEntity entity =3D nu=
ll; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; String responseContent =3D null; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { &nbsp;<br />&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp; // =E5=88=9B=E5=BB=BA=E9=BB=98=E8=AE=A4=E7=9A=84httpClient=E5=AE=9E=E4=
=BE=8B. &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; httpClient =3D HttpClients.createDefaul=
t(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; httpGet.setConfig(requestConfig); &nbsp;<b=
r />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp; // =E6=89=A7=E8=A1=8C=E8=AF=B7=E6=B1=82 &nbsp;<br />&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp; response =3D httpClient.execute(httpGet); &nbsp;<br />&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; entity =3D response.getEntity(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; respon=
seContent =3D EntityUtils.toString(entity, &quot;UTF-8&quot;); &nbsp;<br />=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch =
(Exception e) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace(); &nbsp;<br =
/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } fina=
lly { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; // =E5=85=B3=E9=97=AD=E8=BF=9E=E6=8E=A5,=E9=87=8A=E6=94=BE=
=E8=B5=84=E6=BA=90 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (=
response !=3D null) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp; response.close(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if =
(httpClient !=3D null) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp; httpClient.close(); &nbsp;<br />&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (IOException e=
) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace()=
; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return responseContent; &nbsp;<br=
 />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; /** <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * =
=E5=8F=91=E9=80=81Get=E8=AF=B7=E6=B1=82Https <br />&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp; * @param httpGet<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp; * @return <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp; */ &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; privat=
e String sendHttpsGet(HttpGet httpGet) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CloseableHttpClient httpClient=
 =3D null; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp; CloseableHttpResponse response =3D null; &nbsp;<br />&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpEntity enti=
ty =3D null; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; String responseContent =3D null; &nbsp;<br />&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { &nbsp;<br />&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp; // =E5=88=9B=E5=BB=BA=E9=BB=98=E8=AE=A4=E7=9A=84httpClient=E5=
=AE=9E=E4=BE=8B. &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PublicSuffixMatcher publicSuff=
ixMatcher =3D PublicSuffixMatcherLoader.load(new URL(httpGet.getURI().toStr=
ing())); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DefaultHostnameVerifier hostnameVerifi=
er =3D new DefaultHostnameVerifier(publicSuffixMatcher); &nbsp;<br />&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp; httpClient =3D HttpClients.custom().setSSLHostnameVerifier(hostna=
meVerifier).build(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; httpGet.setConfig(requestC=
onfig); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =E6=89=A7=E8=A1=8C=E8=AF=B7=E6=B1=82=
 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp; response =3D httpClient.execute(httpGet); &nbs=
p;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp; entity =3D response.getEntity(); &nbsp;<br />&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp; responseContent =3D EntityUtils.toString(entity, &quot;UTF-8&quot=
;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; } catch (Exception e) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTra=
ce(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp; } finally { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { &nbsp;<br />&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =E5=85=B3=E9=97=AD=E8=BF=9E=E6=8E=A5,=
=E9=87=8A=E6=94=BE=E8=B5=84=E6=BA=90 &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; if (response !=3D null) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; response.close(); &nbsp;<br />&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp; if (httpClient !=3D null) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; httpClient.close(); &nbsp;<br /=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } ca=
tch (IOException e) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e=
.printStackTrace(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return response=
Content; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br=
 />&nbsp;&nbsp;&nbsp; } &nbsp;<br /><br />&nbsp;=E5=9B=9B=E3=80=81=E6=B5=8B=
=E8=AF=95=E4=BB=A3=E7=A0=81<br />Java=E4=BB=A3=E7=A0=81<br /><br />&nbsp;&n=
bsp;&nbsp; package cn.tzz.apache.httpclient; &nbsp;<br />&nbsp;&nbsp;&nbsp;=
&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp; import <a href=3D"http://java.io" cla=
ss=3D"external-link" rel=3D"nofollow">java.io</a>.File; &nbsp;<br />&nbsp;&=
nbsp;&nbsp; import java.util.ArrayList; &nbsp;<br />&nbsp;&nbsp;&nbsp; impo=
rt java.util.HashMap; &nbsp;<br />&nbsp;&nbsp;&nbsp; import java.util.List;=
 &nbsp;<br />&nbsp;&nbsp;&nbsp; import java.util.Map; &nbsp;<br />&nbsp;&nb=
sp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp; import org.junit.Test; &nbsp=
;<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp; public class=
 HttpClientUtilTest { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Test &nbsp;=
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void testSendHttpPo=
st1() { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp; String responseContent =3D HttpClientUtil.getInstance() &nbsp;<=
br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .sendHttpPost(&quot;<a href=3D=
"http://localhost:8089/test/send?username=3Dtest01&amp;password=3D123456" c=
lass=3D"external-link" rel=3D"nofollow">http://localhost:8089/test/send?use=
rname=3Dtest01&amp;password=3D123456</a>&quot;); &nbsp;<br />&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&qu=
ot;reponse content:&quot; + responseContent); &nbsp;<br />&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Test =
&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void testSend=
HttpPost2() { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp; String responseContent =3D HttpClientUtil.getInstance() &=
nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .sendHttpPost(&quot;<a h=
ref=3D"http://localhost:8089/test/send" class=3D"external-link" rel=3D"nofo=
llow">http://localhost:8089/test/send</a>&quot;, &quot;username=3Dtest01&am=
p;password=3D123456&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;reponse content:&q=
uot; + responseContent); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<=
br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Test &nbsp;<br />&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void testSendHttpPost3() { &nbsp;<=
br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map=
&lt;String, String&gt; maps =3D new HashMap&lt;String, String&gt;(); &nbsp;=
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ma=
ps.put(&quot;username&quot;, &quot;test01&quot;); &nbsp;<br />&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maps.put(&quot;passwo=
rd&quot;, &quot;123456&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String responseContent =3D HttpClientUti=
l.getInstance() &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .sendHt=
tpPost(&quot;<a href=3D"http://localhost:8089/test/send" class=3D"external-=
link" rel=3D"nofollow">http://localhost:8089/test/send</a>&quot;, maps); &n=
bsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
; System.out.println(&quot;reponse content:&quot; + responseContent); &nbsp=
;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Test &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp; public void testSendHttpPost4() { &nbsp;<br />&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map&lt;String, Stri=
ng&gt; maps =3D new HashMap&lt;String, String&gt;(); &nbsp;<br />&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maps.put(&quot;use=
rname&quot;, &quot;test01&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maps.put(&quot;password&quot;, &quot;=
123456&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; List&lt;File&gt; fileLists =3D new ArrayList&lt;File&gt;=
(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; fileLists.add(new File(&quot;D://test//httpclient//1.png&quot;)); &=
nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p; fileLists.add(new File(&quot;D://test//httpclient//1.txt&quot;)); &nbsp;=
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; St=
ring responseContent =3D HttpClientUtil.getInstance() &nbsp;<br />&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .sendHttpPost(&quot;<a href=3D"http://localh=
ost:8089/test/sendpost/file" class=3D"external-link" rel=3D"nofollow">http:=
//localhost:8089/test/sendpost/file</a>&quot;, maps, fileLists); &nbsp;<br =
/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System=
.out.println(&quot;reponse content:&quot; + responseContent); &nbsp;<br />&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&=
nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Test &nbsp;<b=
r />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void testSendHttpGet1=
() { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp; String responseContent =3D HttpClientUtil.getInstance() &nbsp;<br =
/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .sendHttpGet(&quot;<a href=3D"htt=
p://localhost:8089/test/send?username=3Dtest01&amp;password=3D123456" class=
=3D"external-link" rel=3D"nofollow">http://localhost:8089/test/send?usernam=
e=3Dtest01&amp;password=3D123456</a>&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;r=
eponse content:&quot; + responseContent); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp; } &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Test &nbsp;<br />&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void testSendHttpGet2() { &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map&l=
t;String, String&gt; maps =3D new HashMap&lt;String, String&gt;(); &nbsp;</=
p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maps.=
put(&quot;username&quot;, &quot;test01&quot;); &nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maps.=
put(&quot;password&quot;, &quot;123456&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String responseContent =3D Http=
ClientUtil.getInstance() &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
; .sendHttpGet(&quot;<a href=3D"http://localhost:8089/test/send?username=3D=
test01&amp;password=3D123456" class=3D"external-link" rel=3D"nofollow">http=
://localhost:8089/test/send</a>&quot;,maps); &nbsp;<br />&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;r=
eponse content:&quot; + responseContent); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp; }&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Test &nbs=
p;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void testSendHttp=
sGet() { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp; String responseContent =3D HttpClientUtil.getInstance() &nbsp;=
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .sendHttpsGet(&quot;<a href=
=3D"https://www.baidu.com" class=3D"external-link" rel=3D"nofollow">https:/=
/www.baidu.com</a>&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;reponse content:&qu=
ot; + responseContent); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp; }=
 &nbsp;<br /><br />&nbsp;<br />Java=E4=BB=A3=E7=A0=81&nbsp; <br /><br />&nb=
sp;&nbsp;&nbsp; @RequestMapping(value =3D &quot;/test/send&quot;) &nbsp;<br=
 />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ResponseBody &nbsp;<br />&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Map&lt;String, String&gt; se=
ndPost(HttpServletRequest request) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map&lt;String, String&gt; maps =3D=
 new HashMap&lt;String, String&gt;(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String username =3D request.getPa=
rameter(&quot;username&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String password =3D request.getParameter=
(&quot;password&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp; maps.put(&quot;username&quot;, username); &nbsp=
;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m=
aps.put(&quot;password&quot;, password); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return maps; &nbsp;<br />&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp; @RequestMapping(value =3D &quot;/test/sendpost/file&quot;,method=3DRe=
questMethod.POST) &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @R=
esponseBody &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public M=
ap&lt;String, String&gt; sendPostFile(@RequestParam(&quot;files&quot;) Mult=
ipartFile [] files,HttpServletRequest request) { &nbsp;<br />&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map&lt;String, String&=
gt; maps =3D new HashMap&lt;String, String&gt;(); &nbsp;<br />&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String username =3D r=
equest.getParameter(&quot;username&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String password =3D request.=
getParameter(&quot;password&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maps.put(&quot;username&quot;, user=
name); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp; maps.put(&quot;password&quot;, password); &nbsp;<br />&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try { &n=
bsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp; for(MultipartFile file : files){ &nbsp;<br />&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String fileName =3D file.getOriginalFil=
ename(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fileName =3D n=
ew String(fileName.getBytes(),&quot;UTF-8&quot;); &nbsp;<br />&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp; InputStream is =3D file.getInputStream(); &nbsp;=
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (fileName !=3D null &amp;&=
amp; !(&quot;&quot;.equals(fileName))) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File directory =3D new File(&quot=
;D://test//httpclient//file&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!directory.exists()) { &nbsp;<br /=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp; directory.mkdirs(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String filePath =3D (&quot;D://test//=
httpclient//file&quot;) + File.separator + fileName; &nbsp;<br />&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileOutputStream fos =
=3D new FileOutputStream(filePath); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; byte[] buffer =3D new byte[1024]; &nbs=
p;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; whi=
le (is.read(buffer) &gt; 0) { &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fos.write(buffer, 0,=
 buffer.length); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp; fos.flush(); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fos.close(); &nbsp;<br />&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maps.put(&quot;file--&quot=
;+fileName, &quot;uploadSuccess&quot;); &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (Exception e) =
{ &nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace(); &nbsp;<br />&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;<br />&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return maps; &=
nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;</p>
    </div>
</body>
</html>
------=_Part_1330_867003485.1489473537789--
