<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<description>Spring 数据库及事务配置</description>
	<!-- <context:property-placeholder location="classpath:jdbc.properties,classpath:system.properties"/> -->
	<!-- 属性文件读入 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="UTF-8" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
		<property name="initialSize" value="3" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="60000" />
		<!-- 超过时间限制是否回收 -->
		<!-- <property name="removeAbandoned" value="true" /> -->
		<!-- 超过时间限制多长 -->
		<!-- <property name="removeAbandonedTimeout" value="180" /> -->
		<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
	</bean>
	<bean id="springDataSourceBeanPostProcessor"
		class="com.wfj.netty.servlet.handler.spring.SpringDataSourceBeanPostProcessor" />
	<bean id="wrappedDataSource"
		class="com.wfj.netty.servlet.handler.factory.SpringDataSourceFactoryBean">
		<property name="targetName" value="dataSource" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<!-- 设置在事务接口中，遇到非事务方法时，将非事务接口的资源隔离出当前事务的ThreadLocal，将事务接口与非事务接口彻底隔离开 -->
		<property name="transactionSynchronization" value="1" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 声明事务规则 -->
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="false" />
			<tx:method name="select*" propagation="REQUIRED" read-only="false" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="create*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="cancle*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="merge*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="remove*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="overtime*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="manualCancle*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="des*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="reg*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" propagation="SUPPORTS" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- 定义切面 -->
		<aop:pointcut id="oaServiceMethods"
			expression="execution(* com.wangfj.wms.service.impl.*.*(..))" />
		<!-- 将事务通知和切面组合 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="oaServiceMethods" />
	</aop:config>


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>


	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wangfj.back.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wangfj.wms.persistence" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


</beans>